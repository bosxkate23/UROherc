//===== rAthena Script =======================================
//= Euphy's Quest Shop
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.6b
//===== Compatible With: =====================================
//= rAthena SVN r16862+
//===== Description: =========================================
//= A dynamic quest shop based on Lunar's, with easier config.
//= Includes support for multiple shops & cashpoints.
//= Item Preview script by ToastOfDoom.
//===== Additional Comments: =================================
//= 1.0 Initial script.
//= 1.2 Added category support.
//= 1.3 More options and fixes.
//= 1.4 Added debug settings.
//= 1.5 Replaced categories with shop IDs.
//= 1.6 Added support for purchasing stackables.
//= 1.6a Added support for previewing costumes and robes.
//= 1.6b Added 'disable_items' command.
//============================================================

// Shop NPCs -- supplying no argument displays entire menu.
//	callfunc "qshop"{,<shop ID>{,<shop ID>{,...}}};
// 4_F_VALKYRIE 4_F_BRZ_WOMAN
//============================================================
mall,99,120,5	script	Quest Shop#1	4_F_ACOLYTE,{ 
	callfunc "qshop";
	
OnPCLoadMapEvent:
   if( strcharinfo(3) == strnpcinfo(4) )
       showevent 1,1;
   end;
//OnInit:
//	waitingroom "Quest Shop",0;
//	end;
}
mall	mapflag	loadevent
// Script Core
//============================================================
-	script	quest_shop	FAKE_NPC,{ 
function Add; function Chk; function Slot; function A_An;
OnInit:
	freeloop(1);
	

// -----------------------------------------------------------
//  Basic shop settings.
// -----------------------------------------------------------

	set .Announce,1;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,1;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .ShowID,1;  	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,0;	// Show Zeny cost, if any? (1: yes / 0: no)
	set .MaxStack,100;	// Max number of quest items purchased at one time.

// -----------------------------------------------------------
//  Points variable -- optional quest requirement.
//	setarray .Points$[0],"<variable name>","<display name>";
// -----------------------------------------------------------

	setarray .Points$[0],"#CASHPOINTS","Cash Points";

// -----------------------------------------------------------
//  Shop IDs -- to add shops, copy dummy data at bottom of file.
//	setarray .Shops$[1],"<Shop 1>","<Shop 2>"{,...};
// -----------------------------------------------------------

	setarray .Shops$[1],"Wings","Headgears","Mid Gears","Weapons","Neo Weapons","Accessory";

// -----------------------------------------------------------
//  Quest items -- do NOT use a reward item more than once!
//	Add(<shop ID>,<reward ID>,<reward amount>,
//	    <Zeny cost>,<point cost>,
//	    <required item ID>,<required item amount>{,...});
// -----------------------------------------------------------

	Add(1,20003,1,15000000,0,7214,100,7063,100,7067,100);//Gargoyle 
	Add(1,20001,1,15000000,0,994,80,954,80,7006,80);//Phoenix
	Add(1,20004,1,15000000,0,995,25,749,25,7066,50,969,50);//Artic
	Add(1,20002,1,15000000,0,1036,100,923,100,1030,30);//Demon Wing
	Add(1,20025,1,0,0,7116,50,963,150,978,10,969,200);//Claw Wing
	Add(1,20011,1,0,0,7054,150,7063,20,982,10,969,200);//White ButtefflyW
	Add(1,20012,1,0,0,7168,100,1058,70,983,10,969,200);//Black BW
	Add(1,20013,1,0,0,7101,100,924,150,7053,100,969,200);//Torn Wing
	Add(1,20014,1,0,0,1036,1000,7451,10,983,10,969,300);//Vampire Wing
	Add(1,30027,1,5000000,0,1038,200,1039,200,983,2);//Arch Demon
	Add(1,30028,1,5000000,0,4174,1,2255,2,983,2);////Deviling
	Add(1,30030,1,5000000,0,4054,1,2254,2,982,2);////Angeling
	Add(1,20015,1,0,0,20011,11,20012,1,4054,10,30030,1,4174,10,30028,1);////HNH
	Add(1,20005,1,200000000,0,1058,500,20012,1,982,10);////ICARUS WING
	Add(1,20056,1,100000000,0,7447,300,20002,2,2255,10,2700,5,1565,2);////DEVIL

	Add(2,20000,1,0,0,1059,100,7097,100,7020,10,1030,20); // Hokage
	//HOKAGE RECOLOR
	Add(2,30220,1,0,0,1059,100,7097,100,7169,20,2700,10);//shizuKAGE
	Add(2,30221,1,0,0,1059,100,7097,100,7211,20,7109,10);//TSUCHIKAGE
	Add(2,30222,1,0,0,1059,100,7097,100,7036,15,7562,3);//MIZUKAGE
	Add(2,30224,1,0,0,1059,100,7097,100,7018,20,7108,10);//RAIKAGE
	Add(2,30225,1,0,0,1059,100,7097,100,968,20,7451,10);//KAZEKAGE
	Add(2,20029,1,5000000,0,910,500,4392,10,20030,50,2659,1,2660,1,2661,1,2662,1);//Cygnus
	Add(2,5138,1,5000000,0,1020,300,1034,300,969,100); //Magic Eyes
	Add(2,5137,1,5000000,0,1064,150,7047,150,969,50);//alice Doll
	Add(2,20028,1,0,0,7086,6,5560,1,983,5);//Ensign
	Add(2,20050,1,0,0,7092,6,5498,1,975,5);//Creed
	Add(2,20026,1,0,0,7078,6,5373,1,981,5);//Kakashi
	Add(2,20027,1,0,0,7091,6,5366,1,976,5);//Travelers
	Add(2,20022,1,100000000,0,2256,5,750,1,7106,250,4129,25,4147,5);//Baphomet
	Add(2,30270,1,10000000,0,2256,5,12118,50);//FHP
	Add(2,20016,1,10000000,0,2256,5,12120,50);//EHP
	Add(2,20020,1,10000000,0,2256,5,12121,50);//WindHP
	Add(2,20018,1,10000000,0,2256,5,4039,25,4057,25);//SHP
	Add(2,20019,1,10000000,0,2256,5,12119,25,12120,25);//WaterHP
	Add(2,20017,1,10000000,0,2256,5,12085,10);//LHP
	
//	Add(2,20051,1,0,0,20022,1,7090,3,20030,50);//UPG BAPHO
//	Add(2,20052,1,0,0,2289,5,7086,1,20030,50);////POPOO
//	Add(2,20053,1,0,0,20027,1,7091,3,20030,50);//TRAVEL
	
//	Add(3,20024,1,0,0,7090,2,7095,500,20030,5);//Robo Ear
	Add(3,30250,1,50000000,0,938,50,909,50,4147,10);//AWE
	Add(3,30251,1,50000000,0,938,50,909,50,4144,10);//EWE
	Add(3,30252,1,50000000,0,938,50,909,50,4132,10);//Blush
	Add(3,30253,1,50000000,0,938,50,909,50,4143,10);//Blink
	Add(3,30254,1,50000000,0,938,50,909,50,4137,10);//Dark B
	Add(3,30255,1,50000000,0,938,50,909,50,4123,10);//ELVen
	Add(3,30256,1,50000000,0,938,50,909,50,4134,10);//Masq
	Add(3,30257,1,100000000,0,7439,5,1059,200,4121,10,7018,10);//RE
	Add(3,30258,1,300000000,0,4121,10,4198,10,976,5,7063,250,7101,150,30250,1);//AS
	Add(3,30175,1,0,0,30488,2,4330,10,20030,100);//Rinnegan
	Add(3,30176,1,0,0,20002,2,4147,10,20030,100);//Sharringan
	Add(3,30177,1,0,0,20003,2,4374,10,20030,100);//Byakugan
	Add(3,30460,1,0,0,30488,2,4330,10,20030,100);//Elven Earring
	Add(3,30503,1,0,0,20002,2,4147,10,20030,100);//Phoenix
	Add(3,30507,1,0,0,20003,2,4374,10,20030,100);//Rainbow
	Add(3,30478,1,0,0,30490,2,4143,10,20030,100);//Grimmjaw
	Add(3,30435,1,0,0,20011,2,4131,10,20030,100);//RockShooter
	Add(3,30402,1,0,0,20002,1,20003,4123,10,20030,100);//Black Devil
	Add(3,30401,1,0,0,20012,1,30490,1,4263,10,20030,100);//AdvRobo
	Add(3,30497,1,0,0,20002,1,30490,1,4146,10,20030,100);//Mecha Robo
	Add(3,30247,1,0,0,30490,2,4143,10,20030,100);//Bone Mask
	Add(3,30400,1,0,0,20002,1,30488,1,4132,10,20030,100);//3D
	Add(3,30208,1,0,0,20013,2,4135,10,20030,100);//Hunter
	Add(3,30411,1,0,0,20012,2,4168,10,20030,100);//Obito
//	Add(3,20023,1,0,0,7091,2,634,300,20030,5);//Hollow Mask
//	Add(3,20040,1,0,0,7086,5,975,10,7095,200,20030,7);//Tobi Mask

	
	
	Add(4,1720,1,50000000,0,30488,1,20002,1,1711,5);//Icarus Bow
	Add(4,1634,1,50000000,0,30488,1,20002,1,1608,5);////Icarus Staff
	Add(4,1137,1,50000000,0,30488,1,20002,1,1127,5);////Icarus Sword
	Add(4,13107,1,50000000,0,30488,1,20002,1,13104,5);////Icarus GUN
	Add(4,13031,1,50000000,0,20012,1,999,350,969,250,7297,30,714,25);//Swordbreaker
	Add(4,1225,1,50000000,0,20011,1,999,350,969,250,7292,30,714,25);////Mailbreaker
	Add(4,13032,1,50000000,0,20013,1,999,350,969,250,7296,30,714,25);////Skewer
	Add(4,1530,1,50000000,0,20001,1,20005,1,5113,1,1508,1,7289,15,7290,15,4246,10,4305,5);////Fist of Fury
//	Add(4,1161,1,50000000,0,7079,3,7089,3,7088,3,1135,1,1133,1,1141,1,1136,1);////Balmung
//	Add(4,1533,1,0,0,1161,1,13020,1,20005,1,7837,4,7090,2,7092,2,7076,2,7075,2,12114,100,12115,100,12116,100,12117,100);////Warrior's Balmung

	Add(5,1174,1,0,0,7109,30,702,200,7024,10,4305,10,20030,50); //Neo Blood
	Add(5,1266,1,0,0,13017,4,7563,150,702,150,7024,10,20030,50); //Neo Kata
	Add(5,1744,1,0,0,1723,2,7563,150,990,150,7447,50,20030,50); //Neo Skyfi
	Add(5,1644,1,0,0,2003,2,7563,200,7024,10,4132,10,20030,50); //Neo Warlor
	Add(5,1546,1,0,0,1525,4,4143,10,7447,500,20030,50); //Neo Mace
	Add(5,13120,1,0,0,13104,4,4131,10,7563,10,20030,50); //Neo Revol
	Add(5,1421,1,0,0,1422,2,4121,10,702,100,20030,50); //Neo Spear
	Add(5,1577,1,0,0,1565,2,4263,10,7563,10,990,150,20030,50); //Neo Apocal
	
//	Add(6,1740,1,0,0,4134,10,20003,2,20030,200); //Betray
//	Add(6,1741,1,0,0,4134,10,20003,2,20030,200); //Skyfire
//	Add(6,1742,1,0,0,4134,10,20003,2,20030,200); //Taut
//	Add(6,13450,1,0,0,4386,10,30490,2,20030,200); //Blaze
//	Add(6,13451,1,0,0,4144,10,20002,2,20030,200); //Venge
//	Add(6,13452,1,0,0,4318,10,20025,2,20030,200); //Levia
//	Add(6,13453,1,0,0,4342,10,30027,2,20030,200); //Bloodlord
//	Add(6,13454,1,0,0,4302,10,20012,2,20030,200); //Blink
//	Add(6,1641,1,0,0,4352,10,20005,2,20030,200); //Glowing
//	Add(6,1642,1,0,0,4376,10,30488,2,20030,200); //Wild Fury
	
	

	Add(6,2658,1,50000000,0,7292,100,7078,6,2618,4,7444,100);//Nile
	Add(6,30238,1,50000000,0,2771,2,969,1000);//STR
	Add(6,30239,1,50000000,0,2770,2,969,1000);//AGI
	Add(6,30240,1,50000000,0,2766,2,969,1000);//VIT
	Add(6,30241,1,50000000,0,2768,2,969,1000);//INT
	Add(6,30242,1,50000000,0,2769,2,969,1000);//DEX
	Add(6,30243,1,50000000,0,2767,2,969,1000);//LUK

//	Add(8,20042,1,0,0,20010,1,20046,1,7090,2,7444,100,20030,50);//F Armor
//	Add(8,20043,1,0,0,20009,1,20047,1,7089,2,7444,100,20030,50);////F Manteau
//	Add(8,20044,1,0,0,20008,1,20048,1,7088,2,7444,100,20030,50);////F Shield
//	Add(8,20045,1,0,0,20006,1,20049,1,7092,2,7444,100,20030,50);////F Shoes
// -----------------------------------------------------------

	freeloop(0);
	set .menu$,"";
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1) {
		set .menu$, .menu$+.Shops$[.@i]+":";
		npcshopdelitem "qshop"+.@i,909;
	}
	end;

OnMenu:
	set .@size, getarraysize(@i);
	if (!.@size) set .@i, select(.menu$);
	else if (.@size == 1) set .@i, @i[0];
	else {
		for(set .@j,0; .@j<.@size; set .@j,.@j+1)
			set .@menu$, .@menu$+.Shops$[@i[.@j]]+":";
		set .@i, @i[select(.@menu$)-1];
	}
	deletearray @i[0],getarraysize(@i);
	if (.Shops$[.@i] == "") {
		message strcharinfo(0),"An error has occurred.";
		end;
	}
	dispbottom "Select one item at a time.";
	callshop "qshop"+.@i,1;
	npcshopattach "qshop"+.@i;
	end;

OnBuyItem:
	// .@q[] : RewardID, BoughtAmt, RewardAmt, BaseAmt, ReqZeny, ReqPts, { ReqItem, ReqAmt, ... }
	setarray .@q[0],@bought_nameid[0],((@bought_quantity[0] > .MaxStack)?.MaxStack:@bought_quantity[0]);
	copyarray .@q[3],getd(".q_"+.@q[0]+"[0]"),getarraysize(getd(".q_"+.@q[0]));
	set .@q[2],.@q[1]*.@q[3];
	if (!.@q[2] || .@q[2] > 30000) {
		message strcharinfo(0),"You can't purchase that many "+getitemname(.@q[0])+".";
		end;
	}
	mes "[Quest Shop]";
	mes "Reward: ^0055FF"+((.@q[2] > 1)?.@q[2]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	disable_items;
	if (.@q[4]) mes " > "+Chk(Zeny,.@q[4]*.@q[1])+(.@q[4]*.@q[1])+" Zeny^000000";
	if (.@q[5]) mes " > "+Chk(getd(.Points$[0]),.@q[5]*.@q[1])+(.@q[5]*.@q[1])+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+(.@q[5]*.@q[1])+")^000000";
	if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1]*.@q[1])+((.ShowID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+(.@q[.@i+1]*.@q[1])+")^000000";
	next;
	setarray @qe[1], getiteminfo(.@q[0],5), getiteminfo(.@q[0],11);
	if (@qe[2] > 0 && ((@qe[1] & 1) || (@qe[1] & 256) || (@qe[1] & 512) || (@qe[1] & 1024) || (@qe[1] & 2048) || (@qe[1] & 4096) || (@qe[1] & 4) || (@qe[1] & 8192)))
		set .@preview,1;
	addtimer 1000, strnpcinfo(0)+"::OnEnd";
	while(1) {
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000:"+((.@preview && !@qe[7])?" ~ Preview...":"")+": ~ ^777777Cancel^000000")) {
		case 1:
			if (@qe[0]) { 
				mes "[Quest Shop]";
				mes "You're missing one or more quest requirements.";
				close;
			}
			if (!checkweight(.@q[0],.@q[2])) {
				mes "[Quest Shop]";
				mes "^FF0000You need "+(((.@q[2]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
				close;
			}
			if (.@q[4]) set Zeny, Zeny-(.@q[4]*.@q[1]);
			if (.@q[5]) setd .Points$[0], getd(.Points$[0])-(.@q[5]*.@q[1]);
			if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
				delitem .@q[.@i],.@q[.@i+1]*.@q[1];
			getitem .@q[0],.@q[2];
			if (.Announce) announce strcharinfo(0)+" has created "+((.@q[2] > 1)?.@q[2]+"x "+getitemname(.@q[0]):A_An(getitemname(.@q[0])))+"!",0;
			specialeffect(EF_FLOWERLEAF, AREA, playerattached());
			close;
		case 2:
			setarray @qe[3], getlook(LOOK_HEAD_BOTTOM), getlook(LOOK_HEAD_TOP), getlook(LOOK_HEAD_MID), getlook(LOOK_ROBE), 1;
			if ((@qe[1] & 1) || (@qe[1] & 4096)) changelook LOOK_HEAD_BOTTOM, @qe[2];
			else if ((@qe[1] & 256) || (@qe[1] & 1024)) changelook LOOK_HEAD_TOP, @qe[2];
			else if ((@qe[1] & 512) || (@qe[1] & 2048)) changelook LOOK_HEAD_MID, @qe[2];
			else if ((@qe[1] & 4) || (@qe[1] & 8192)) changelook LOOK_ROBE, @qe[2];
			break;
		case 3:
			close;
		}
	}

OnEnd:
	if (@qe[7]) {
		changelook LOOK_HEAD_BOTTOM, @qe[3];
		changelook LOOK_HEAD_TOP, @qe[4];
		changelook LOOK_HEAD_MID, @qe[5];
		changelook LOOK_ROBE, @qe[6];
	}
	deletearray @qe[0],8;
	end;
	
function Add {
	if (getitemname(getarg(1)) == "null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped).";
		return;
	}
	setarray .@j[0],getarg(2),getarg(3),getarg(4);
	for(set .@i,5; .@i<getargcount(); set .@i,.@i+2) {
		if (getitemname(getarg(.@i)) == "null") {
			debugmes "Quest requirement #"+getarg(.@i)+" invalid (skipped).";
			return;
		} else
			setarray .@j[.@i-2],getarg(.@i),getarg(.@i+1);
	}
	copyarray getd(".q_"+getarg(1)+"[0]"),.@j[0],getarraysize(.@j);
	npcshopadditem "qshop"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return;
}

function Chk {
	if (getarg(0) < getarg(1)) {
		set @qe[0],1;
		return "^FF0000";
	} else
		return "^00FF00";
}

function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot) {
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),2) == 4 || getiteminfo(getarg(0),2) == 5) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$;
	}
}

function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0);
}
}

function	script	qshop	{
	deletearray @i[0],getarraysize(@i);
	for(set .@i,0; .@i<getargcount(); set .@i,.@i+1)
		set @i[.@i],getarg(.@i);
	doevent "quest_shop::OnMenu";
	end;
	
}


// Dummy shop data -- copy as needed.
//============================================================
-	shop	qshop	FAKE_NPC,909:-1
-	shop	qshop1	FAKE_NPC,909:-1
-	shop	qshop2	FAKE_NPC,909:-1
-	shop	qshop3	FAKE_NPC,909:-1
-	shop	qshop4	FAKE_NPC,909:-1
-	shop	qshop5	FAKE_NPC,909:-1
-	shop	qshop6	FAKE_NPC,909:-1
-	shop	qshop7	FAKE_NPC,909:-1

//DUplicate
//prt_in,41,115,5	duplicate(Quest Shop#1)	Quest Shop#prtinq	4_F_ACOLYTE